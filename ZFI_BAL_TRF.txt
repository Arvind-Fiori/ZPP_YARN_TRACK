*&----------------------------------------------------------------------------------------------*
*&  Program Name        :  ZFI_BAL_TRF                                                          *
*&  Purpose             :  Report and Posting for Customer and Balance TRF                                            *
*&  Author              :  Sushen Gore     - VCERP                                              *
*&  Business Analyst    :  Hardik Nagariya
*&  TRN                 :  ATDK9A0CHQ
*&  Start Date          :  07/12/2024                                                           *
*&  Category            :  FI                                                                   *
*&  Changed By          :  N.A                                                                  *
*&  Change Code         :  N.A                                                                  *
*&  Details             :  Report and Posting for Customer and Balance TRF                                             *
*&  Devid               *  5978
*&-------------------------------------------------------------------------------------
REPORT zfi_bal_trf.

TABLES : acdoca,bseg,bkpf.

TYPES : BEGIN OF ty_final,

          key        TYPE char30,
          rbukrs     TYPE acdoca-rbukrs,
          gjahr      TYPE acdoca-gjahr,
          belnr      TYPE acdoca-belnr,
          buzei      TYPE acdoca-buzei,
          lifnr      TYPE acdoca-lifnr,
          lifnr_name TYPE c LENGTH 40,
          kunnr      TYPE acdoca-kunnr,
          kunnr_name TYPE c LENGTH 40,
          budat      TYPE acdoca-budat,
          bldat      TYPE acdoca-bldat,
          blart      TYPE acdoca-blart,
          prctr      TYPE acdoca-prctr,
          prctr_n    TYPE acdoca-prctr,
          rwcur      TYPE acdoca-rwcur,
          drcrk      TYPE acdoca-drcrk,
          hsl        TYPE acdoca-hsl,
          umskz      TYPE acdoca-umskz,
          wsl        TYPE acdoca-wsl, "HSL Calculation
          wsl_1      TYPE acdoca-wsl, "HSL Calculation
          wsl_act    TYPE acdoca-wsl, "WSL Calculation
          wsl_act1   TYPE acdoca-wsl, "WSL Calculation
          waers      TYPE acdoca-rwcur, "WSL Calculation
          zfbdt      TYPE bseg-zfbdt,
          zterm      TYPE bseg-zterm,
          xblnr      TYPE bkpf-xblnr,
          bktxt      TYPE bkpf-bktxt,
          zuonr      TYPE bseg-zuonr,
          sgtxt      TYPE bseg-sgtxt,
          bupla      TYPE bseg-bupla,
          bupla_n    TYPE bseg-bupla,
          netdt      TYPE bseg-netdt,
          zlsch      TYPE bseg-zlsch,
          zlspr      TYPE bseg-zlspr,
          secco      TYPE bseg-secco,
          xref1      TYPE bseg-xref1,
          xref2      TYPE bseg-xref2,
          zbd1t      TYPE bseg-zbd1t,
          zbd2t      TYPE bseg-zbd2t,
          zbd3t      TYPE bseg-zbd3t,
          kursf      TYPE bkpf-kursf,

          acc_doc1   TYPE bseg-belnr,
          acc_year1  TYPE bseg-gjahr,
          icon1      TYPE c LENGTH 4,
          msg1       TYPE c LENGTH 120,
          acc_doc2   TYPE bseg-belnr,
          acc_year2  TYPE bseg-gjahr,
          icon2      TYPE c LENGTH 4,
          msg2       TYPE c LENGTH 120,

          sel        TYPE c LENGTH 1,
          icon       TYPE c LENGTH 4,
          msg        TYPE c LENGTH 120.
TYPES :   celltab TYPE lvc_t_styl.
TYPES :       END OF ty_final.

TYPES : BEGIN OF ty_acdoca,
          rldnr  TYPE acdoca-rldnr,
          rbukrs TYPE acdoca-rbukrs,
          gjahr  TYPE acdoca-gjahr,
          belnr  TYPE acdoca-belnr,
          buzei  TYPE acdoca-buzei,
          docln  TYPE acdoca-docln,
          ryear  TYPE acdoca-ryear,
          rrcty  TYPE acdoca-rrcty,
          rwcur  TYPE acdoca-rwcur,
          wsl    TYPE acdoca-wsl,
          drcrk  TYPE acdoca-drcrk,
          budat  TYPE acdoca-budat,
          bldat  TYPE acdoca-bldat,
          blart  TYPE acdoca-blart,
          zuonr  TYPE acdoca-zuonr,
          sgtxt  TYPE acdoca-sgtxt,
          matnr  TYPE acdoca-matnr,
          werks  TYPE acdoca-werks,
          lifnr  TYPE acdoca-lifnr,
          kunnr  TYPE acdoca-kunnr,
          augdt  TYPE acdoca-augdt,
          augbl  TYPE acdoca-augbl,
          auggj  TYPE acdoca-auggj,
          hsl    TYPE acdoca-hsl,
          prctr  TYPE acdoca-prctr,
          umskz  TYPE acdoca-umskz,
        END OF ty_acdoca.

TYPES: BEGIN OF ty_bseg,
         bukrs TYPE bseg-bukrs,
         belnr TYPE bseg-belnr,
         gjahr TYPE bseg-gjahr,
         buzei TYPE bseg-buzei,
         zfbdt TYPE bseg-zfbdt,
         zterm TYPE bseg-zterm,
         bupla TYPE bseg-bupla,
         secco TYPE bseg-secco,
         xref1 TYPE bseg-xref1,
         xref2 TYPE bseg-xref2,
         zlsch TYPE bseg-zlsch,
         zlspr TYPE bseg-zlspr,
         zbd1t TYPE bseg-zbd1t,
         zbd2t TYPE bseg-zbd2t,
         zbd3t TYPE bseg-zbd3t,
         netdt TYPE bseg-netdt,
         xblnr TYPE bkpf-xblnr,
         bktxt TYPE bkpf-bktxt,
         kursf TYPE bkpf-kursf,
       END OF ty_bseg.

TYPES: BEGIN OF ty_kna1,
         kunnr TYPE kna1-kunnr,
         name1 TYPE kna1-name1,
       END OF ty_kna1.

TYPES: BEGIN OF ty_lfa1,
         lifnr TYPE lfa1-lifnr,
         name1 TYPE lfa1-name1,
       END OF ty_lfa1.

DATA: lt_celltab TYPE lvc_t_styl,
      ls_celltab TYPE lvc_s_styl.

TYPES : tt_final TYPE ty_final.

DATA : gt_final      TYPE STANDARD TABLE OF ty_final,
       gs_final      TYPE ty_final,
       gt_final_01   TYPE STANDARD TABLE OF ty_final,
       gs_final_01   TYPE ty_final,
       gt_kna1       TYPE STANDARD TABLE OF ty_kna1,
       gs_kna1       TYPE ty_kna1,
       gt_lfa1       TYPE STANDARD TABLE OF ty_lfa1,
       gs_lfa1       TYPE ty_lfa1,
       gt_zfi_trf_pc TYPE STANDARD TABLE OF zfi_trf_pc,
       gs_zfi_trf_pc TYPE zfi_trf_pc,
       gt_bseg       TYPE STANDARD TABLE OF ty_bseg,
       gs_bseg       TYPE ty_bseg,
       gt_acdoca     TYPE STANDARD TABLE OF ty_acdoca,
       gs_acdoca     TYPE ty_acdoca.

DATA : lt_glacct     TYPE  TABLE OF  bapiacgl09,      " Internal Table for GL Line Items
       lt_vendact    TYPE  TABLE OF  bapiacap09,      " Internal Table for Vendor Lines Items
       lt_customer   TYPE  TABLE OF  bapiacar09,      " Internal Table for Customer Lines Items
       lt_accounttax TYPE STANDARD TABLE OF bapiactx09,
       lt_docheader  TYPE  TABLE OF  bapiache09,      " Internal Table for Header Details
       lt_curramt    TYPE  TABLE OF  bapiaccr09,      " Internal Table for Currency for All Items
       lt_wthold     TYPE  TABLE OF  bapiacwt09,      " Internal Table for With Holding Tax
       lt_return     TYPE  TABLE OF  bapiret2,        " Internal Table for BAPI Messages
       lt_ext        TYPE  TABLE OF bapiacextc,       " Internal Table for BAPI extension
       lt_ext2       TYPE TABLE OF  bapiparex,
       ls_docheader  TYPE  bapiache09,
       ls_customer   TYPE  bapiacar09,
       ls_glacct     TYPE  bapiacgl09,
       ls_vendact    TYPE  bapiacap09,
       ls_curramt    TYPE  bapiaccr09,
       p_error1      TYPE c LENGTH 200,
       p_error2      TYPE c LENGTH 200,
       lv_amount     TYPE p DECIMALS 2,
       lv_amount2    TYPE p DECIMALS 2,
       lv_count      TYPE  bapiacgl09-itemno_acc,
       lv_belnr      TYPE  bapiache09-obj_key.
DATA :lv_datem TYPE c LENGTH 10.
DATA : gv_fidtyear TYPE c LENGTH 10.

DATA : s_prctr  TYPE RANGE OF bseg-prctr,
       ls_prctr LIKE LINE OF s_prctr.
DATA : gt_fieldcat TYPE lvc_t_fcat,
       gs_fieldcat TYPE lvc_s_fcat,
       ls_layout   TYPE lvc_s_layo.

DATA : gt_zfi_bl_dtl       TYPE STANDARD TABLE OF zfi_bl_dtl,
       gs_zfi_bl_dtl       TYPE zfi_bl_dtl,
       gt_zfi_bl_bp        TYPE STANDARD TABLE OF zfi_bl_bp,
       gs_zfi_bl_bp        TYPE zfi_bl_bp,
       gt_zfi_bl_dtl_1000  TYPE STANDARD TABLE OF zfi_bl_dtl,
       gs_zfi_bl_dtl_1000  TYPE zfi_bl_dtl,
       gt_zfi_bl_dtl_check TYPE STANDARD TABLE OF zfi_bl_dtl_check,
       gs_zfi_bl_dtl_check TYPE zfi_bl_dtl_check.

DATA : edit_allow TYPE c LENGTH 1.

DATA : fi_year   TYPE bapi0002_4-fiscal_year,
       fi_period TYPE bapi0002_4-fiscal_period.


SELECTION-SCREEN : ULINE.
SELECT-OPTIONS : s_bukrs FOR bkpf-bukrs NO-EXTENSION NO INTERVALS DEFAULT '1000' MODIF ID m3 OBLIGATORY,
                 s_budat FOR bkpf-budat NO-EXTENSION NO INTERVALS OBLIGATORY,
                 s_koart FOR bseg-koart NO-DISPLAY,
                 s_augdt FOR acdoca-augdt NO-DISPLAY,
                 s_linfr FOR bseg-lifnr MODIF ID m1 NO INTERVALS,
                 s_kunnr FOR bseg-kunnr MODIF ID m2 NO INTERVALS.
PARAMETERS : pdate TYPE datum DEFAULT sy-datum OBLIGATORY.
SELECTION-SCREEN : BEGIN OF BLOCK block WITH FRAME TITLE TEXT-001.
PARAMETERS : rb1 RADIOBUTTON GROUP g1 USER-COMMAND u1 DEFAULT 'X',
             rb2 RADIOBUTTON GROUP g1.
SELECTION-SCREEN : END OF BLOCK block.

AT SELECTION-SCREEN.
  IF sy-ucomm = 'ONLI'.
    IF s_budat[] IS INITIAL.
      MESSAGE 'Date is Mandatory' TYPE 'E'.
    ENDIF.
  ENDIF.


AT SELECTION-SCREEN OUTPUT.
  IF rb1 = 'X'.
    LOOP AT SCREEN .
      IF screen-group1 = 'M2'.
        screen-active  = 0.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
    CLEAR : s_kunnr[],s_kunnr.
  ENDIF.

  IF rb2 = 'X'.
    LOOP AT SCREEN .
      IF screen-group1 = 'M1'.
        screen-active  = 0.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
    CLEAR : s_linfr[],s_linfr.
  ENDIF.

  LOOP AT SCREEN .
    IF screen-group1 = 'M3'.
      screen-input  = 0.
    ENDIF.
    MODIFY SCREEN.
  ENDLOOP.

START-OF-SELECTION.
  PERFORM get_data.

END-OF-SELECTION.
  PERFORM process.
  PERFORM show_data.

FORM get_data.

  IF rb1 = 'X'.

    s_koart-sign = 'I'.s_koart-option = 'EQ'.s_koart-low = 'K'.APPEND s_koart.

    SELECT mandt
           zcst_vnd
           f_prctr
           t_prctr
           FROM zfi_trf_pc
           INTO TABLE gt_zfi_trf_pc
           WHERE zcst_vnd = 'V'.

  ELSEIF rb2 = 'X'.

    s_koart-sign = 'I'.s_koart-option = 'EQ'.s_koart-low = 'D'.APPEND s_koart.

    SELECT mandt
           zcst_vnd
           f_prctr
           t_prctr
           FROM zfi_trf_pc
           INTO TABLE gt_zfi_trf_pc
           WHERE zcst_vnd = 'C'.
  ENDIF.

  IF gt_zfi_trf_pc IS INITIAL.
    MESSAGE 'No any Profit Center Maintained for Customer / Vendor ' TYPE 'E'.
  ELSE.
    s_prctr = VALUE #( FOR gs_zfi_trf_pc IN gt_zfi_trf_pc ( sign = 'I' option = 'EQ'
                                                       low = gs_zfi_trf_pc-f_prctr ) )."range
  ENDIF.

  CHECK s_prctr[] IS NOT INITIAL.



  SELECT    rldnr
            rbukrs
            gjahr
            belnr
            buzei
            docln
            ryear
            rrcty
            rwcur
            wsl
            drcrk
            budat
            bldat
            blart
            zuonr
            sgtxt
            matnr
            werks
            lifnr
            kunnr
            augdt
            augbl
            auggj
            hsl
            prctr
            umskz
            FROM acdoca
            INTO TABLE gt_acdoca
            WHERE rbukrs IN s_bukrs
            AND   lifnr  IN s_linfr
            AND   kunnr  IN s_kunnr
            AND   koart  IN s_koart
            AND   prctr  IN s_prctr
            AND   budat  LE s_budat-low
            AND   ( augdt  EQ '00000000' OR augdt GT s_budat-low ).

  IF gt_acdoca IS NOT INITIAL.

    SELECT bseg~bukrs
           bseg~belnr
           bseg~gjahr
           bseg~buzei
           bseg~zfbdt
           bseg~zterm
           bseg~bupla
           bseg~secco
           bseg~xref1
           bseg~xref2
           bseg~zlsch
           bseg~zlspr
           bseg~zbd1t
           bseg~zbd2t
           bseg~zbd3t
           bseg~netdt
           bkpf~xblnr
           bkpf~bktxt
           bkpf~kursf
           FROM bseg INNER JOIN bkpf
           ON bseg~bukrs EQ bkpf~bukrs
           AND bseg~belnr EQ bkpf~belnr
           AND bseg~gjahr EQ bkpf~gjahr
           INTO TABLE gt_bseg
           FOR ALL ENTRIES IN gt_acdoca
           WHERE bseg~bukrs  = gt_acdoca-rbukrs
           AND   bseg~belnr  = gt_acdoca-belnr
           AND   bseg~gjahr  = gt_acdoca-gjahr
           AND   bseg~buzei  = gt_acdoca-buzei.
    IF gt_bseg[] IS NOT INITIAL.
      SELECT  mandt
              bukrs
              fbusplc
              tbusplc
              FROM zfi_bl_bp
              INTO TABLE gt_zfi_bl_bp
              FOR ALL ENTRIES IN gt_bseg
              WHERE bukrs   = gt_bseg-bukrs
              AND   fbusplc = gt_bseg-bupla.
    ENDIF.

    SELECT kunnr
           name1
           FROM kna1
           INTO TABLE gt_kna1
           FOR ALL ENTRIES IN gt_acdoca
           WHERE kunnr = gt_acdoca-kunnr.

    SELECT lifnr
           name1
           FROM lfa1
           INTO TABLE gt_lfa1
           FOR ALL ENTRIES IN gt_acdoca
           WHERE lifnr = gt_acdoca-lifnr.

    SELECT *
           FROM zfi_bl_dtl
           INTO TABLE gt_zfi_bl_dtl
           FOR ALL ENTRIES IN gt_acdoca
           WHERE  bukrs  = gt_acdoca-rbukrs
           AND    belnr  = gt_acdoca-belnr
           AND    gjahr  = gt_acdoca-gjahr.

    SELECT *
            FROM zfi_bl_dtl
            APPENDING TABLE gt_zfi_bl_dtl
            FOR ALL ENTRIES IN gt_acdoca
            WHERE  bukrs_1000  = gt_acdoca-rbukrs
            AND    belnr_1000  = gt_acdoca-belnr
            AND    gjahr_1000  = gt_acdoca-gjahr.

    SELECT mandt
           puser
           pedit
           FROM zfi_bl_dtl_check
           INTO TABLE gt_zfi_bl_dtl_check
           WHERE puser = sy-uname
           AND   pedit = 'X'.
    IF sy-subrc = 0.
      edit_allow = 'X'.
    ENDIF.

  ENDIF.

ENDFORM.

FORM process.

  DATA lv_value TYPE bapicurr-bapicurr.

  gt_zfi_bl_dtl_1000 = gt_zfi_bl_dtl.

  SORT gt_zfi_bl_bp ASCENDING BY bukrs fbusplc.

  SORT gt_acdoca ASCENDING BY rbukrs
                              belnr
                              gjahr.

  SORT gt_bseg ASCENDING BY   bukrs
                              belnr
                              gjahr
                              buzei.

  SORT gt_zfi_bl_dtl ASCENDING BY   bukrs
                                    belnr
                                    gjahr
                                    buzei.

  SORT gt_zfi_bl_dtl_1000 ASCENDING BY  bukrs_1000
                                        belnr_1000
                                        gjahr_1000.

  SORT gt_zfi_bl_dtl_check ASCENDING BY  puser.

  SORT gt_kna1 ASCENDING BY kunnr.
  SORT gt_lfa1 ASCENDING BY lifnr.
  SORT gt_zfi_trf_pc ASCENDING BY zcst_vnd f_prctr.

  LOOP AT gt_acdoca INTO gs_acdoca.

    READ TABLE gt_zfi_bl_dtl INTO gs_zfi_bl_dtl WITH KEY bukrs = gs_acdoca-rbukrs
                                                         belnr = gs_acdoca-belnr
                                                         gjahr = gs_acdoca-gjahr
                                                         buzei = gs_acdoca-buzei
                                                         BINARY SEARCH.
    IF sy-subrc = 0 AND gs_zfi_bl_dtl-icon_2400 = '@08@' AND gs_zfi_bl_dtl-icon_1000 = '@08@'.
      CONTINUE.
    ENDIF.

    READ TABLE gt_zfi_bl_dtl_1000 INTO gs_zfi_bl_dtl_1000 WITH KEY bukrs_1000 = gs_acdoca-rbukrs
                                                                   belnr_1000 = gs_acdoca-belnr
                                                                   gjahr_1000 = gs_acdoca-gjahr
                                                                   BINARY SEARCH.
    IF sy-subrc = 0.
      CONTINUE.
    ENDIF.

    MOVE-CORRESPONDING gs_acdoca TO gs_final.

    IF gs_zfi_bl_dtl-icon_2400 = '@08@' AND gs_zfi_bl_dtl-icon_1000 = '@0A@'.
      gs_final-icon1    = '@08@'.
      gs_final-msg1     = 'Document Already Created'.
      gs_final-acc_doc1 = gs_zfi_bl_dtl-belnr_2400.
    ENDIF.

    IF gs_final-prctr IS NOT INITIAL.
      READ TABLE gt_zfi_trf_pc INTO gs_zfi_trf_pc WITH KEY f_prctr = gs_final-prctr BINARY SEARCH.
      IF sy-subrc NE 0.
        gs_final-icon   = '@0A@'.
        gs_final-msg    = 'Profit Center Not Mapped in ZFI_TRF_PC'.
      ELSE.
        gs_final-prctr_n = gs_zfi_trf_pc-t_prctr.
      ENDIF.
    ENDIF.


    gs_final-wsl     = gs_acdoca-hsl.
    gs_final-wsl_act = gs_acdoca-wsl.
    gs_final-umskz   = gs_acdoca-umskz.

    IF gs_final-rwcur = 'JPY'.
      CLEAR : lv_value.
      CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_EXTERNAL'
        EXPORTING
          currency        = gs_final-rwcur
          amount_internal = gs_final-wsl_act
        IMPORTING
          amount_external = lv_value.
      gs_final-wsl_act = lv_value.
    ENDIF.


    READ TABLE gt_bseg INTO gs_bseg WITH KEY bukrs = gs_acdoca-rbukrs
                                             belnr = gs_acdoca-belnr
                                             gjahr = gs_acdoca-gjahr
                                             buzei = gs_acdoca-buzei BINARY SEARCH.
    IF sy-subrc = 0.
      gs_final-zfbdt = gs_bseg-zfbdt.
      gs_final-zterm = gs_bseg-zterm.
      gs_final-xblnr = gs_bseg-xblnr.
      gs_final-bktxt = gs_bseg-bktxt.
      gs_final-bupla = gs_bseg-bupla.
      gs_final-xref1 = gs_bseg-xref1.
      gs_final-xref2 = gs_bseg-xref2.
      gs_final-zlsch = gs_bseg-zlsch.
      gs_final-zlspr = gs_bseg-zlspr.
      gs_final-secco = gs_bseg-secco.
      gs_final-zbd1t = gs_bseg-zbd1t.
      gs_final-zbd2t = gs_bseg-zbd2t.
      gs_final-zbd3t = gs_bseg-zbd3t.
      gs_final-netdt = gs_bseg-netdt.
      gs_final-kursf = gs_bseg-kursf.
    ENDIF.

    IF gs_final-bupla IS NOT INITIAL.
      READ TABLE gt_zfi_bl_bp INTO gs_zfi_bl_bp WITH KEY bukrs = gs_final-rbukrs fbusplc = gs_final-bupla BINARY SEARCH.
      IF sy-subrc NE 0.
        gs_final-icon   = '@0A@'.
        gs_final-msg    = 'BP Not Mapped in ZFI_BL_BP'.
      ELSE.
        gs_final-bupla_n = gs_zfi_bl_bp-tbusplc.
      ENDIF.
    ENDIF.


    IF gs_acdoca-kunnr IS NOT INITIAL.
      READ TABLE gt_kna1 INTO gs_kna1 WITH KEY kunnr = gs_acdoca-kunnr BINARY SEARCH.
      IF sy-subrc = 0.
        gs_final-kunnr_name = gs_kna1-name1.
      ENDIF.
    ENDIF.

    IF gs_acdoca-lifnr IS NOT INITIAL.
      READ TABLE gt_lfa1 INTO gs_lfa1 WITH KEY lifnr = gs_acdoca-lifnr BINARY SEARCH.
      IF sy-subrc = 0.
        gs_final-lifnr_name = gs_lfa1-name1.
      ENDIF.
    ENDIF.

    gs_final-wsl_1    = gs_final-wsl.
    gs_final-wsl_act1 = gs_final-wsl_act.

    IF gs_final-wsl_1 LT '0.00'.
      gs_final-wsl_1 = gs_final-wsl_1  * -1.
    ENDIF.

    IF gs_final-wsl_act1 LT '0.00'.
      gs_final-wsl_act1 = gs_final-wsl_act1  * -1.
    ENDIF.

    CONCATENATE gs_final-rbukrs gs_final-belnr gs_final-gjahr INTO gs_final-key.
    CONDENSE gs_final-key NO-GAPS.

    IF gs_final-icon   = '@0A@'.
      ls_celltab-fieldname = 'SEL'.   " field1
      ls_celltab-style = cl_gui_alv_grid=>mc_style_disabled.
      APPEND ls_celltab TO lt_celltab.
      INSERT LINES OF lt_celltab INTO TABLE gs_final-celltab.
      CLEAR : lt_celltab , ls_celltab ,lt_celltab[].
    ENDIF.

    APPEND gs_final TO gt_final.
    CLEAR : gs_final,lt_celltab , ls_celltab ,lt_celltab[].
  ENDLOOP.

ENDFORM.

FORM show_data.

  DEFINE mac.

    gs_fieldcat-fieldname = &1.
    gs_fieldcat-scrtext_m = &2.
    gs_fieldcat-checkbox = &3.
    gs_fieldcat-icon = &4.
    gs_fieldcat-tabname = &5.
    gs_fieldcat-outputlen = &6.
    gs_fieldcat-edit = &7.
    gs_fieldcat-emphasize = &8.
    APPEND gs_fieldcat TO gt_fieldcat.

  END-OF-DEFINITION.


*_Layout
  ls_layout-zebra = 'X'.
  ls_layout-stylefname  = 'CELLTAB'.
  ls_layout-col_opt  = 'X'.

  IF edit_allow EQ 'X'.
    mac 'SEL'               'Select'           'X' '' 'GT_FINAL'   '06' 'X' ''.
  ENDIF.

  mac 'RBUKRS'            'Comp.Code'        '' '' 'GT_FINAL'   '08' '' 'C110'.
  mac 'GJAHR'             'Year'             '' '' 'GT_FINAL'   '06' '' 'C110'.
  mac 'BELNR'             'Doc.Num'          '' '' 'GT_FINAL'   '10' '' 'C110'.
  mac 'BUZEI'             'Doc.Itm'          '' '' 'GT_FINAL'   '10' '' 'C110'.

  IF rb1 = 'X'.
    mac 'LIFNR'             'Vendor'           '' '' 'GT_FINAL'   '10' '' ''.
    mac 'LIFNR_NAME'        'Vendor Name'      '' '' 'GT_FINAL'   '15' '' ''.
  ELSEIF rb2 = 'X'.
    mac 'KUNNR'             'Customer'         '' '' 'GT_FINAL'   '10' '' ''.
    mac 'KUNNR_NAME'        'Customer Name'    '' '' 'GT_FINAL'   '15' '' ''.
  ENDIF.

  mac 'BUDAT'             'Post.Date'        '' '' 'GT_FINAL'   '10' '' ''.
  mac 'BLDAT'             'Doc.Date'         '' '' 'GT_FINAL'   '10' '' ''.
  mac 'BLART'             'Doc.Type'         '' '' 'GT_FINAL'   '06' '' ''.
  mac 'PRCTR'             'Proft Center'     '' '' 'GT_FINAL'   '10' '' ''.
  mac 'RWCUR'             'Currency'         '' '' 'GT_FINAL'   '06' '' ''.
  mac 'DRCRK'             'D/C Indi.'        '' '' 'GT_FINAL'   '06' '' ''.
  mac 'UMSKZ'             'Special GL'       '' '' 'GT_FINAL'   '08' '' ''.
  mac 'WSL'               'Amt.In Comp Cd.'  '' '' 'GT_FINAL'   '10' '' ''.
  mac 'WSL_ACT'           'Amt.In Doc Curr'    '' '' 'GT_FINAL'   '10' '' ''.
  mac 'ZFBDT'             'Baseline Date'    '' '' 'GT_FINAL'   '10' '' ''.
  mac 'ZTERM'             'PayTerm'          '' '' 'GT_FINAL'   '10' '' ''.
  mac 'XBLNR'             'Refrence'         '' '' 'GT_FINAL'   '10' '' ''.
  mac 'BKTXT'             'Header Text'      '' '' 'GT_FINAL'   '10' '' ''.
  mac 'ZUONR'             'Assignment'       '' '' 'GT_FINAL'   '15' '' ''.
  mac 'SGTXT'             'Sort Text'        '' '' 'GT_FINAL'   '20' '' ''.
  mac 'BUPLA'             'Buss.Place'        '' '' 'GT_FINAL'   '10' '' ''.

  mac 'ICON1'             '2400 CC Status'            '' 'X' 'GT_FINAL'  '10' '' ''.
  mac 'MSG1'              '2400 CC Message Log'       '' '' 'GT_FINAL'  '10' '' ''.

  mac 'ICON2'             '1000 CC Status'            '' 'X' 'GT_FINAL'  '10' '' ''.
  mac 'MSG2'              '1000 CC Message Log'       '' '' 'GT_FINAL'  '10' '' ''.

  mac 'ACC_DOC1'          '2400 CC Document'          '' '' 'GT_FINAL'  '10' '' ''.
  mac 'ACC_DOC2'          '1000 CC Document'          '' '' 'GT_FINAL'  '10' '' ''.

  mac 'ICON'              'Overall Status'            '' 'X' 'GT_FINAL'  '05' '' ''.
  mac 'MSG'               'Overall Status Msg'        '' '' 'GT_FINAL'   '25' '' ''.

  LOOP AT gt_fieldcat INTO gs_fieldcat.
    IF gs_fieldcat-fieldname = 'ICON1' OR gs_fieldcat-fieldname = 'MSG1' OR gs_fieldcat-fieldname = 'ICON2'
      OR gs_fieldcat-fieldname = 'MSG2' OR gs_fieldcat-fieldname = 'ACC_DOC1' OR gs_fieldcat-fieldname = 'ACC_DOC2'.
      gs_fieldcat-no_out = 'X'.
      MODIFY gt_fieldcat FROM gs_fieldcat TRANSPORTING no_out.
    ENDIF.
  ENDLOOP.


*_display alv output
  SORT gt_final DESCENDING BY rbukrs belnr gjahr buzei.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program       = sy-repid
      is_layout_lvc            = ls_layout
      i_callback_pf_status_set = 'PF_STATUS'
      i_callback_user_command  = 'USER_COMMAND'
      i_default                = 'X'
      i_save                   = 'X'
      it_fieldcat_lvc          = gt_fieldcat
    TABLES
      t_outtab                 = gt_final
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.


ENDFORM.


FORM user_command USING r_ucomm TYPE sy-ucomm
                        rs_selfield TYPE slis_selfield.
  DATA : e_grid TYPE REF TO cl_gui_alv_grid.
  DATA : ls_chid  TYPE t604n,
         lv_msg   TYPE string,
         ucomm    TYPE sy-ucomm,
         go_ahead TYPE flag.

  DATA : gt_zfi_bl_dtl_db TYPE STANDARD TABLE OF zfi_bl_dtl,
         gs_zfi_bl_dtl_db TYPE zfi_bl_dtl.

  DATA : pflag TYPE flag.

  ucomm = sy-ucomm.

  CLEAR : gt_final_01,pflag.


  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      e_grid = e_grid.

  CALL METHOD e_grid->check_changed_data.

  CASE ucomm.

    WHEN 'SEL'.

      e_grid->get_filtered_entries(
            IMPORTING
            et_filtered_entries = DATA(lit_index) ).
      SORT lit_index DESCENDING.

      " Remove excluded rows from buffer
      gs_final-sel = 'X'.
      MODIFY gt_final FROM gs_final TRANSPORTING sel WHERE sel = '' AND icon = ''.
      LOOP AT lit_index ASSIGNING FIELD-SYMBOL(<index>).
        READ TABLE gt_final ASSIGNING FIELD-SYMBOL(<fs001>) INDEX <index>.
        IF sy-subrc EQ 0.
          <fs001>-sel = ''.
        ENDIF.
      ENDLOOP.

      CALL METHOD e_grid->refresh_table_display.
    WHEN 'DSEL'.

      CLEAR : gs_final.
      gs_final-sel = ''.
      MODIFY  gt_final FROM gs_final TRANSPORTING sel WHERE sel = 'X'.
      CALL METHOD e_grid->refresh_table_display.


    WHEN 'POST' OR 'SIMU'.

      CLEAR : pflag.

      IF ucomm = 'POST'.
        pflag = 'P'.
      ELSEIF ucomm = 'SIMU'.
        pflag = 'S'.
      ENDIF.

      READ TABLE gt_final INTO gs_final  WITH KEY sel = 'X'.
      IF sy-subrc NE 0.
        MESSAGE 'Please Select atleast one entry to Post' TYPE 'E'.
      ELSE.

        LOOP AT gt_final INTO gs_final WHERE sel = 'X' AND icon NE '@0A@' .

          IF rb1 = 'X'.

            IF gs_final-acc_doc1 IS INITIAL.
              PERFORM bapi_acc_doc_vend_2400 USING pflag CHANGING gs_final.
            ENDIF.

            IF gs_final-icon1 EQ '@08@'.
              PERFORM bapi_acc_doc_vend_1000 USING pflag CHANGING gs_final.
            ENDIF.

          ELSEIF  rb2 = 'X'.

            IF gs_final-acc_doc1 IS INITIAL.
              PERFORM bapi_acc_doc_cust_2400 USING pflag CHANGING gs_final.
            ENDIF.

            IF gs_final-icon1 EQ '@08@'.
              PERFORM bapi_acc_doc_cust_1000 USING pflag CHANGING gs_final.
            ENDIF.

          ENDIF.

          IF gs_final-icon1 = '@08@' AND gs_final-icon2 = '@08@'.
            gs_final-icon = '@08@'.
            gs_final-msg  = 'Completely Processed'.
          ELSEIF gs_final-icon1 = '@0A@'.
            gs_final-icon = '@0A@'.
            gs_final-msg  = 'Error generated'.
          ELSEIF gs_final-icon1 = '@08@' AND gs_final-icon2 = '@0A@'.
            gs_final-icon = '@09@'.
            gs_final-msg  = 'Partially Processed'.
          ENDIF.

          IF pflag = 'P'.
            gs_final-sel = ''.
            ls_celltab-fieldname = 'SEL'.   " field1
            ls_celltab-style = cl_gui_alv_grid=>mc_style_disabled.
            APPEND ls_celltab TO lt_celltab.
            INSERT LINES OF lt_celltab INTO TABLE gs_final-celltab.
          ELSEIF pflag = 'S'.
            IF gs_final-icon = '@0A@'.
              gs_final-sel = ''.
              ls_celltab-fieldname = 'SEL'.   " field1
              ls_celltab-style = cl_gui_alv_grid=>mc_style_disabled.
              APPEND ls_celltab TO lt_celltab.
              INSERT LINES OF lt_celltab INTO TABLE gs_final-celltab.
            ENDIF.
          ENDIF.


          MODIFY gt_final FROM gs_final TRANSPORTING icon1
                                                     msg1
                                                     acc_doc1
                                                     acc_year1
                                                     icon2
                                                     msg2
                                                     acc_doc2
                                                     acc_year2
                                                     msg
                                                     icon
                                                     celltab
                                                     sel.

          IF pflag = 'P'.
            IF rb1 = 'X'.
              gs_zfi_bl_dtl_db-koart = 'V'.
            ELSEIF rb2 = 'X'.
              gs_zfi_bl_dtl_db-koart = 'C'.
            ENDIF.
            gs_zfi_bl_dtl_db-bukrs      = gs_final-rbukrs.
            gs_zfi_bl_dtl_db-belnr      = gs_final-belnr.
            gs_zfi_bl_dtl_db-gjahr      = gs_final-gjahr.
            gs_zfi_bl_dtl_db-buzei      = gs_final-buzei.

            gs_zfi_bl_dtl_db-bukrs_2400 = '2400'.
            gs_zfi_bl_dtl_db-icon_2400  = gs_final-icon1.
            gs_zfi_bl_dtl_db-belnr_2400 = gs_final-acc_doc1.
            gs_zfi_bl_dtl_db-gjahr_2400 = gs_final-acc_year1.
            gs_zfi_bl_dtl_db-msg_2400   = gs_final-msg1.

            gs_zfi_bl_dtl_db-bukrs_1000 = '1000'.
            gs_zfi_bl_dtl_db-icon_1000  = gs_final-icon2.
            gs_zfi_bl_dtl_db-belnr_1000 = gs_final-acc_doc2.
            gs_zfi_bl_dtl_db-gjahr_1000 = gs_final-acc_year2.
            gs_zfi_bl_dtl_db-msg_1000   = gs_final-msg2.

            gs_zfi_bl_dtl_db-udate      = sy-datum.
            gs_zfi_bl_dtl_db-utime      = sy-uzeit.
            gs_zfi_bl_dtl_db-uname      = sy-uname.
            APPEND gs_zfi_bl_dtl_db TO gt_zfi_bl_dtl_db.
            CLEAR:gs_zfi_bl_dtl_db.
          ENDIF.

          CLEAR : lt_celltab[] ,ls_celltab.
        ENDLOOP.

      ENDIF.

      IF pflag = 'P'.

        IF gt_zfi_bl_dtl_db[] IS NOT INITIAL.
          MODIFY zfi_bl_dtl FROM TABLE gt_zfi_bl_dtl_db.
          COMMIT WORK AND WAIT.
          MESSAGE 'Please check Processing Log' TYPE 'S'.
        ENDIF.

        LOOP AT gt_fieldcat INTO gs_fieldcat.
          IF gs_fieldcat-fieldname = 'ICON1' OR gs_fieldcat-fieldname = 'MSG1' OR gs_fieldcat-fieldname = 'ICON2'
            OR gs_fieldcat-fieldname = 'MSG2' OR gs_fieldcat-fieldname = 'ACC_DOC1' OR gs_fieldcat-fieldname = 'ACC_DOC2'
            OR gs_fieldcat-fieldname = 'ICON' OR gs_fieldcat-fieldname = 'MSG'.
            gs_fieldcat-no_out = ''.
            MODIFY gt_fieldcat FROM gs_fieldcat TRANSPORTING no_out.
          ENDIF.
        ENDLOOP.
      ELSEIF pflag = 'S'.

        LOOP AT gt_fieldcat INTO gs_fieldcat.
          IF gs_fieldcat-fieldname = 'ICON1' OR gs_fieldcat-fieldname = 'MSG1' OR gs_fieldcat-fieldname = 'ICON2'
            OR gs_fieldcat-fieldname = 'MSG2' OR gs_fieldcat-fieldname = 'ICON' OR gs_fieldcat-fieldname = 'MSG'.
            gs_fieldcat-no_out = ''.
            MODIFY gt_fieldcat FROM gs_fieldcat TRANSPORTING no_out.
          ENDIF.
        ENDLOOP.

      ENDIF.

      CALL METHOD e_grid->set_frontend_fieldcatalog
        EXPORTING
          it_fieldcatalog = gt_fieldcat[].

      CALL METHOD e_grid->refresh_table_display.

  ENDCASE.

ENDFORM.

FORM bapi_acc_doc_vend_2400 USING pflag CHANGING gs_final01 TYPE tt_final.

  DATA : lv_stop TYPE flag.

  CLEAR : lt_glacct,lt_vendact,lt_customer,lt_accounttax,lt_docheader,lt_curramt,lt_wthold,lt_return,lt_ext,lt_ext2,
  ls_docheader,ls_glacct,ls_vendact,ls_curramt,p_error1,p_error2,lv_count,lv_belnr,lv_belnr,lv_datem,ls_customer ,lv_amount,
  lv_amount2 ,lv_stop,gv_fidtyear.

*_Header___
  ls_docheader-obj_type     =   'BKPFF'.
  ls_docheader-username     =   sy-uname.


  gv_fidtyear  = gs_final01-budat.
  CONCATENATE gv_fidtyear+6(2) gv_fidtyear+4(2) gv_fidtyear+2(2) INTO gv_fidtyear.
  CONDENSE gv_fidtyear NO-GAPS.

  CONCATENATE gs_final01-rbukrs gs_final01-belnr gv_fidtyear gs_final01-blart INTO ls_docheader-header_txt SEPARATED BY '/'.

  ls_docheader-comp_code    =   '2400'.
  ls_docheader-doc_date     =   gs_final01-bldat.
  ls_docheader-pstng_date   =   pdate.
  ls_docheader-doc_type     =   'UE'.
  ls_docheader-ref_doc_no   =   gs_final01-xblnr.


*_Vendor Item____& Currency

*  LOOP AT gt_final INTO gs_final WHERE rbukrs  = gs_final01-rbukrs
*                                 AND   belnr   = gs_final01-belnr
*                                 AND   gjahr   = gs_final01-gjahr
*                                 AND   buzei   = gs_final01-buzei
*                                 AND   sel     = 'X'.

  lv_count = lv_count + 1.

  lv_amount  =     gs_final01-wsl_1.
  lv_amount2 =     gs_final01-wsl_act1.

  ls_vendact-itemno_acc     = lv_count.
  ls_vendact-vendor_no      = gs_final01-lifnr.
  ls_vendact-ref_key_1      = gs_final01-xref1.
  ls_vendact-bline_date     = gs_final01-netdt.
  ls_vendact-pymt_meth      = gs_final01-zlsch.
  ls_vendact-alloc_nmbr     = gs_final01-zuonr.
  ls_vendact-item_text      = gs_final01-sgtxt.

  ls_vendact-sp_gl_ind      = gs_final01-umskz.

  IF gs_final01-zlspr = 'R'.
    ls_vendact-pmnt_block     = 'A'.
  ELSE.
    ls_vendact-pmnt_block     = gs_final01-zlspr.
  ENDIF.

  IF gs_final01-bupla_n IS NOT INITIAL.
    ls_vendact-businessplace  = gs_final01-bupla_n.
    ls_vendact-sectioncode    = gs_final01-bupla_n.
  ENDIF.

  IF gs_final01-prctr_n IS NOT INITIAL.
    ls_vendact-profit_ctr  = gs_final01-prctr_n.
    ls_vendact-ref_key_2   = gs_final01-prctr_n.
  ENDIF.

  APPEND ls_vendact TO lt_vendact.
  CLEAR : ls_vendact.

  IF gs_final01-rwcur NE 'INR'.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ELSE.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.

*_GL Entry & Currency
  lv_count = lv_count + 1.
  ls_glacct-itemno_acc     =  lv_count.
  ls_glacct-gl_account     =  '0000299002'.
  ls_glacct-item_text      =  gs_final01-sgtxt.
  ls_glacct-ref_key_1      =  gs_final01-xref1.
  ls_glacct-ref_key_2      =  gs_final01-xref2.
  ls_glacct-alloc_nmbr     =  gs_final01-zuonr.
  ls_glacct-businessplace  =  gs_final01-bupla_n.
  APPEND ls_glacct  TO lt_glacct.
  CLEAR: ls_glacct.

  IF gs_final01-rwcur NE 'INR'.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ELSE.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.

  CLEAR : lv_amount , lv_amount2.

*  ENDLOOP.

  IF pflag = 'P'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader    = ls_docheader
      IMPORTING
        obj_key           = lv_belnr
      TABLES
        accountgl         = lt_glacct
        accountpayable    = lt_vendact
        accountreceivable = lt_customer
        currencyamount    = lt_curramt
        return            = lt_return.
  ELSEIF pflag = 'S'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
      EXPORTING
        documentheader = ls_docheader
      TABLES
        accountgl      = lt_glacct
        accountpayable = lt_vendact
        currencyamount = lt_curramt
        return         = lt_return.

  ENDIF.

  READ TABLE lt_return INTO DATA(lw_return) WITH KEY type = 'E'.
  IF sy-subrc NE 0.

    IF  pflag = 'P'.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      gs_final01-icon1      = '@08@'.
      gs_final01-msg1       = 'Doc.Posted Sucessfully'.
      gs_final01-acc_doc1   = lv_belnr+0(10).
      gs_final01-acc_year1  = lv_belnr+14(4).

    ELSEIF  pflag = 'S'.
      gs_final01-icon1       = '@08@'.
      gs_final01-msg1        = 'Simu.Done Sucessfully'.
    ENDIF.

  ELSE.

    DELETE lt_return WHERE type NE 'E'.
    LOOP AT lt_return INTO lw_return WHERE type EQ 'E' AND number NE '609'.
      CONCATENATE p_error1 lw_return-message INTO p_error1 SEPARATED BY ','.
    ENDLOOP.

    REPLACE FIRST OCCURRENCE OF ',' IN p_error1 WITH ''.
    CONDENSE p_error1 .

    gs_final01-icon1  = '@0A@'.
    gs_final01-msg1   = p_error1.

  ENDIF.



ENDFORM.

FORM  bapi_acc_doc_vend_1000 USING pflag CHANGING gs_final01 TYPE tt_final.


  CLEAR : lt_glacct,lt_vendact,lt_customer,lt_accounttax,lt_docheader,lt_curramt,lt_wthold,lt_return,lt_ext,lt_ext2,
  ls_docheader,ls_glacct,ls_vendact,ls_curramt,p_error1,p_error2,lv_count,lv_belnr,lv_belnr,lv_datem ,ls_customer ,lv_amount,
  lv_amount2,gv_fidtyear.

*_Header___
  ls_docheader-obj_type     =   'BKPFF'.
  ls_docheader-username     =   sy-uname.

  gv_fidtyear  = gs_final01-budat.
  CONCATENATE gv_fidtyear+6(2) gv_fidtyear+4(2) gv_fidtyear+2(2) INTO gv_fidtyear.
  CONDENSE    gv_fidtyear NO-GAPS.

  CONCATENATE gs_final01-rbukrs gs_final01-belnr gv_fidtyear gs_final01-blart INTO ls_docheader-header_txt SEPARATED BY '/'.

  ls_docheader-comp_code    =   gs_final01-rbukrs.
  ls_docheader-doc_date     =   gs_final01-bldat.
  ls_docheader-pstng_date   =   pdate.
  ls_docheader-doc_type     =   'UE'.
  ls_docheader-ref_doc_no   =   gs_final01-xblnr.

*_Vendor Item____& Currency


  lv_count = lv_count + 1.

  lv_amount  =  gs_final01-wsl_1.
  lv_amount2 =  gs_final01-wsl_act1.


  ls_vendact-itemno_acc     = lv_count.
  ls_vendact-vendor_no      = gs_final01-lifnr.
  ls_vendact-ref_key_1      = gs_final01-xref1.
  ls_vendact-bline_date     = gs_final01-zfbdt.
  ls_vendact-pymt_meth      = gs_final01-zlsch.
  ls_vendact-alloc_nmbr     = gs_final01-zuonr.
  ls_vendact-item_text      = gs_final01-sgtxt.
  ls_vendact-businessplace  = gs_final01-bupla.
  ls_vendact-sectioncode    = gs_final01-secco.
  ls_vendact-ref_key_2      = gs_final01-prctr.
  ls_vendact-profit_ctr     = gs_final01-prctr.
  ls_vendact-sp_gl_ind      = gs_final01-umskz.

  IF gs_final01-zlspr = 'R'.
    ls_vendact-pmnt_block     = 'A'.
  ELSE.
    ls_vendact-pmnt_block     = gs_final01-zlspr.
  ENDIF.

  APPEND ls_vendact TO lt_vendact.
  CLEAR ls_vendact.

  IF gs_final01-rwcur NE 'INR'.

    IF  gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF  gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ELSE.

    IF  gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.

*_GL Entry & Currency
  lv_count = lv_count + 1.
  ls_glacct-itemno_acc     =  lv_count.
  ls_glacct-gl_account     =  '0000299002'.
  ls_glacct-item_text      =  gs_final01-sgtxt.
  ls_glacct-ref_key_1      =  gs_final01-xref1.
  ls_glacct-ref_key_2      =  gs_final01-xref2.
  ls_glacct-alloc_nmbr     =  gs_final01-zuonr.
  ls_glacct-businessplace  =  gs_final01-bupla.
  APPEND ls_glacct  TO lt_glacct.
  CLEAR: ls_glacct.


  IF gs_final01-rwcur NE 'INR'.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ELSE.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.


  IF pflag = 'P'.
    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader    = ls_docheader
      IMPORTING
        obj_key           = lv_belnr
      TABLES
        accountgl         = lt_glacct
        accountpayable    = lt_vendact
        accountreceivable = lt_customer
        currencyamount    = lt_curramt
        return            = lt_return.
  ELSEIF pflag = 'S'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
      EXPORTING
        documentheader = ls_docheader
      TABLES
        accountgl      = lt_glacct
        accountpayable = lt_vendact
        currencyamount = lt_curramt
        return         = lt_return.

  ENDIF.

  READ TABLE lt_return INTO DATA(lw_return) WITH KEY type = 'E'.
  IF sy-subrc NE 0.

    IF  pflag = 'P'.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.
      gs_final01-icon2      = '@08@'.
      gs_final01-msg2       = 'Doc.Posted Sucessfully'.
      gs_final01-acc_doc2   = lv_belnr+0(10).
      gs_final01-acc_year2  = lv_belnr+14(4).

    ELSEIF  pflag = 'S'.
      gs_final01-icon2       = '@08@'.
      gs_final01-msg2        = 'Simu.Done Sucessfully'.
    ENDIF.

  ELSE.
    DELETE lt_return WHERE type NE 'E'.
    LOOP AT lt_return INTO lw_return WHERE type EQ 'E' AND number NE '609'.
      CONCATENATE p_error1 lw_return-message INTO p_error1 SEPARATED BY ','.
    ENDLOOP.

    REPLACE FIRST OCCURRENCE OF ',' IN p_error1 WITH ''.
    CONDENSE p_error1 .

    gs_final01-icon2   = '@0A@'.
    gs_final01-msg2   = p_error1.
  ENDIF.

ENDFORM.


FORM bapi_acc_doc_cust_2400 USING pflag CHANGING gs_final01 TYPE tt_final.

  DATA : lv_stop TYPE flag.

  CLEAR : lt_glacct,lt_vendact,lt_customer,lt_accounttax,lt_docheader,lt_curramt,lt_wthold,lt_return,lt_ext,lt_ext2,
  ls_docheader,ls_glacct,ls_vendact,ls_curramt,p_error1,p_error2,lv_count,lv_belnr,lv_belnr,lv_datem ,ls_customer ,lv_amount,
  lv_amount2 ,lv_stop,gv_fidtyear.


*_Header___
  ls_docheader-obj_type     =   'BKPFF'.
  ls_docheader-username     =   sy-uname.

  gv_fidtyear  = gs_final01-budat.
  CONCATENATE gv_fidtyear+6(2) gv_fidtyear+4(2) gv_fidtyear+2(2) INTO gv_fidtyear.
  CONDENSE    gv_fidtyear NO-GAPS.

  CONCATENATE gs_final01-rbukrs gs_final01-belnr gv_fidtyear gs_final01-blart INTO ls_docheader-header_txt SEPARATED BY '/'.

  ls_docheader-comp_code    =   '2400'.
  ls_docheader-doc_date     =   gs_final01-bldat.
  ls_docheader-pstng_date   =   pdate.
  ls_docheader-doc_type     =   'UE'.
  ls_docheader-ref_doc_no   =   gs_final01-xblnr.



  lv_count = lv_count + 1.

  lv_amount  = lv_amount  + gs_final01-wsl_1.
  lv_amount2 = lv_amount2 + gs_final01-wsl_act1.

*_Customer Item____& Currency

  ls_customer-itemno_acc     = lv_count.
  ls_customer-customer       = gs_final01-kunnr.
  ls_customer-ref_key_1      = gs_final01-xref1.
  ls_customer-bline_date     = gs_final01-netdt.
  ls_customer-pymt_meth      = gs_final01-zlsch.
  ls_customer-pmnt_block     = gs_final01-zlspr.
  ls_customer-alloc_nmbr     = gs_final01-zuonr.
  ls_customer-item_text      = gs_final01-sgtxt.

  IF gs_final01-umskz NE 'W'.
    ls_customer-sp_gl_ind      = gs_final01-umskz.
  ENDIF.


  IF gs_final01-bupla_n IS NOT INITIAL.
    ls_customer-businessplace  = gs_final01-bupla_n.
    ls_customer-sectioncode    = gs_final01-bupla_n.
  ENDIF.

  IF gs_final01-prctr_n IS NOT INITIAL.
    ls_customer-profit_ctr  = gs_final01-prctr_n.
    ls_customer-ref_key_2   = gs_final01-prctr_n.
  ENDIF.

  APPEND ls_customer TO lt_customer.
  CLEAR : ls_customer.

  IF gs_final01-rwcur NE 'INR'.

    IF  gs_final01-drcrk = 'S'.

      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2.

    ELSEIF gs_final01-drcrk = 'H'.

      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF  gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.


  ELSE.

    IF  gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.


*_GL Entry & Currency
  lv_count = lv_count + 1.
  ls_glacct-itemno_acc     =  lv_count.
  ls_glacct-gl_account     =  '0000299003'.
  ls_glacct-item_text      =  gs_final01-sgtxt.
  ls_glacct-ref_key_1      =  gs_final01-xref1.
  ls_glacct-ref_key_2      =  gs_final01-xref2.
  ls_glacct-alloc_nmbr     =  gs_final01-zuonr.
  ls_glacct-businessplace  =  gs_final01-bupla_n.
  APPEND ls_glacct  TO lt_glacct.
  CLEAR: ls_glacct.

  IF gs_final01-rwcur NE 'INR'.

    IF gs_final01-drcrk = 'S'.

      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.

    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount.
    ENDIF.

    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.


  ELSE.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc       =  lv_count.
      ls_curramt-currency         =  gs_final01-rwcur.
      ls_curramt-amt_doccur       =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc       =  lv_count.
      ls_curramt-currency         =  gs_final01-rwcur.
      ls_curramt-amt_doccur       =  lv_amount.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.

  CLEAR : lv_amount , lv_amount2.


  IF pflag = 'P'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader    = ls_docheader
      IMPORTING
        obj_key           = lv_belnr
      TABLES
        accountgl         = lt_glacct
        accountpayable    = lt_vendact
        accountreceivable = lt_customer
        currencyamount    = lt_curramt
        return            = lt_return.

  ELSEIF pflag = 'S'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
      EXPORTING
        documentheader    = ls_docheader
      TABLES
        accountgl         = lt_glacct
        accountreceivable = lt_customer
        currencyamount    = lt_curramt
        return            = lt_return.

  ENDIF.

  READ TABLE lt_return INTO DATA(lw_return) WITH KEY type = 'E'.
  IF sy-subrc NE 0.

    IF  pflag = 'P'.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      gs_final01-icon1       = '@08@'.
      gs_final01-msg1        = 'Doc.Posted Sucessfully'.
      gs_final01-acc_doc1   = lv_belnr+0(10).
      gs_final01-acc_year1  = lv_belnr+14(4).

    ELSEIF  pflag = 'S'.
      gs_final01-icon1       = '@08@'.
      gs_final01-msg1        = 'Simu.Done Sucessfully'.
    ENDIF.

  ELSE.
    DELETE lt_return WHERE type NE 'E'.
    LOOP AT lt_return INTO lw_return WHERE type EQ 'E' AND number NE '609'.
      CONCATENATE p_error1 lw_return-message INTO p_error1 SEPARATED BY ','.
    ENDLOOP.

    REPLACE FIRST OCCURRENCE OF ',' IN p_error1 WITH ''.
    CONDENSE p_error1 .

    gs_final01-icon1   = '@0A@'.
    gs_final01-msg1   = p_error1.
  ENDIF.


ENDFORM.


FORM  bapi_acc_doc_cust_1000 USING pflag CHANGING gs_final01 TYPE tt_final.

  CLEAR : lt_glacct,lt_vendact,lt_customer,lt_accounttax,lt_docheader,lt_curramt,lt_wthold,lt_return,lt_ext,lt_ext2,
  ls_docheader,ls_glacct,ls_vendact,ls_curramt,p_error1,p_error2,lv_count,lv_belnr,lv_belnr,lv_datem ,ls_customer ,lv_amount,
  lv_amount2,gv_fidtyear.

*_Header___
  ls_docheader-obj_type     =   'BKPFF'.
  ls_docheader-username     =   sy-uname.

  gv_fidtyear  = gs_final01-budat.
  CONCATENATE gv_fidtyear+6(2) gv_fidtyear+4(2) gv_fidtyear+2(2) INTO gv_fidtyear.
  CONDENSE    gv_fidtyear NO-GAPS.

  CONCATENATE gs_final01-rbukrs gs_final01-belnr gv_fidtyear gs_final01-blart INTO ls_docheader-header_txt SEPARATED BY '/'.

  ls_docheader-comp_code    =   gs_final01-rbukrs.
  ls_docheader-doc_date     =   gs_final01-bldat.
  ls_docheader-pstng_date   =   pdate.
  ls_docheader-doc_type     =   'UE'.
  ls_docheader-ref_doc_no   =   gs_final01-xblnr.

  lv_count = lv_count + 1.

  lv_amount  = lv_amount  + gs_final01-wsl_1.
  lv_amount2 = lv_amount2 + gs_final01-wsl_act1.

*_Customer_& Currency

  ls_customer-itemno_acc     = lv_count.
  ls_customer-customer       = gs_final01-kunnr.
  ls_customer-ref_key_1      = gs_final01-xref1.
  ls_customer-bline_date     = gs_final01-netdt.
  ls_customer-pymt_meth      = gs_final01-zlsch.
  ls_customer-pmnt_block     = gs_final01-zlspr.
  ls_customer-alloc_nmbr     = gs_final01-zuonr.
  ls_customer-item_text      = gs_final01-sgtxt.
  ls_customer-businessplace  = gs_final01-bupla.
  ls_customer-sectioncode    = gs_final01-secco.
  ls_customer-ref_key_2      = gs_final01-prctr.
  ls_customer-profit_ctr     = gs_final01-prctr.

  IF gs_final01-umskz NE 'W'.
    ls_customer-sp_gl_ind      = gs_final01-umskz.
  ENDIF.

  APPEND ls_customer TO lt_customer.
  CLEAR : ls_customer.

  IF gs_final01-rwcur NE 'INR'.

    IF  gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 .
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF  gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount .
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ELSE.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount .
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.

*_GL Entry & Currency
  lv_count = lv_count + 1.
  ls_glacct-itemno_acc     =  lv_count.
  ls_glacct-gl_account     =  '0000299003'.
  ls_glacct-item_text      =  gs_final01-sgtxt.
  ls_glacct-ref_key_1      =  gs_final01-xref1.
  ls_glacct-ref_key_2      =  gs_final01-xref2.
  ls_glacct-alloc_nmbr     =  gs_final01-zuonr.
  ls_glacct-businessplace  =  gs_final01-bupla.
  APPEND ls_glacct  TO lt_glacct.
  CLEAR: ls_glacct.

  IF gs_final01-rwcur NE 'INR'.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-exch_rate      =  gs_final01-kursf.
      ls_curramt-amt_doccur     =  lv_amount2 * -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-curr_type      =  '10'.
      ls_curramt-currency       =  'INR'.
      ls_curramt-amt_doccur     =  lv_amount * -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ELSE.

    IF gs_final01-drcrk = 'S'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount.
    ELSEIF gs_final01-drcrk = 'H'.
      ls_curramt-itemno_acc     =  lv_count.
      ls_curramt-currency       =  gs_final01-rwcur.
      ls_curramt-amt_doccur     =  lv_amount *  -1.
    ENDIF.
    APPEND ls_curramt TO lt_curramt.
    CLEAR: ls_curramt.

  ENDIF.

  CLEAR : lv_amount , lv_amount2.


  IF pflag = 'P'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader    = ls_docheader
      IMPORTING
        obj_key           = lv_belnr
      TABLES
        accountgl         = lt_glacct
        accountpayable    = lt_vendact
        accountreceivable = lt_customer
        currencyamount    = lt_curramt
        return            = lt_return.

  ELSEIF pflag = 'S'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
      EXPORTING
        documentheader    = ls_docheader
      TABLES
        accountgl         = lt_glacct
        accountreceivable = lt_customer
        currencyamount    = lt_curramt
        return            = lt_return.

  ENDIF.


  READ TABLE lt_return INTO DATA(lw_return) WITH KEY type = 'E'.
  IF sy-subrc NE 0.

    IF  pflag = 'P'.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      gs_final01-icon2       = '@08@'.
      gs_final01-msg2        = 'Doc.Posted Sucessfully'.
      gs_final01-acc_doc2   = lv_belnr+0(10).
      gs_final01-acc_year2  = lv_belnr+14(4).

    ELSEIF  pflag = 'S'.
      gs_final01-icon2       = '@08@'.
      gs_final01-msg2        = 'Simu.Done Sucessfully'.
    ENDIF.


  ELSE.
    DELETE lt_return WHERE type NE 'E'.
    LOOP AT lt_return INTO lw_return WHERE type EQ 'E' AND number NE '609'.
      CONCATENATE p_error1 lw_return-message INTO p_error1 SEPARATED BY ','.
    ENDLOOP.

    REPLACE FIRST OCCURRENCE OF ',' IN p_error1 WITH ''.
    CONDENSE p_error1 .

    gs_final01-icon2   = '@0A@'.
    gs_final01-msg2   = p_error1.
  ENDIF.

ENDFORM.


FORM pf_status USING ut_extab TYPE slis_t_extab.
  DATA : ls_ext LIKE LINE OF ut_extab.
  IF edit_allow = ''.
    ls_ext-fcode = 'SEL'.APPEND ls_ext TO ut_extab.
    ls_ext-fcode = 'DSEL'.APPEND ls_ext TO ut_extab.
    ls_ext-fcode = 'SIMU'.APPEND ls_ext TO ut_extab.
    ls_ext-fcode = 'POST'.APPEND ls_ext TO ut_extab.
  ENDIF.
  SET PF-STATUS 'STANDARD_FULLSCREEN' EXCLUDING ut_extab.
ENDFORM.